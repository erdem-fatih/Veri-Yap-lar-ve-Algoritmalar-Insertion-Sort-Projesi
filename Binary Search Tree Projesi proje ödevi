Proje 3
[7, 5, 1, 8, 3, 6, 0, 9, 4, 2] dizisinin Binary-Search-Tree aşamalarını yazınız.

Örnek: root x'dir. root'un sağından y bulunur. Solunda z bulunur vb.
   Öncelikle 7 değerini ekliyoruz. Daha önceden eklenmiş bir değer olmadığı için 7 değeri ağacımızın root değeri olarak belirlenmiş olur.

   Daha sonrasında 5 değeri geliyor. 7, 5'ten büyük olduğu için root’un solunda yer alır.

   Daha sonrasında 1 değeri geliyor. 1, 7'ten küçük olduğu için root’un solunda yer alır.Ancak 7'in solunda daha önceden eklediğimiz 5 değerli node bulunmaktadır. Ozaman bu 1 değerinde olan node’u bu seferde 5 değeri ile karşılaştırırız. 1, 5'ten küçük olduğu için soluna ekleriz.

   Daha sonrasında 8 değeri geliyor. 7, 8'ten küçük olduğu için root’un solunda yer alır. Ancak 7'in solunda daha önceden eklediğimiz 5 değerli node bulunmaktadır. Ozaman bu 8 değerinde olan node’u bu seferde 5 değeri ile karşılaştırırız. 1, 8'ten büyük olduğu için sağına ekleriz.

    Kodu tekrar inceleyecek olursanız eğer, bu işlemi recursive bir şekilde uygulayarak gerçekleştiriyoruz.
    
|--           |--|--|-  |- |- |- |- |- |- |- |- |
|             |  |  |   |  |  |  | 7|  |  |  |  |  
|             |  |  |   |  |  | /|  |\ |  |  |  | 
|             |  |  |   |  | 5|  |  |  |8 |  |  | 
|             |  |  |   | /|  |\ |  |  |  |\ |  | 
|             |  |  | 1 |  |  |  |6 |  |  |  | 9|
|             |  | /|   |\ |  |  |  |  |  |  |  |
|             | 0|  |   |  | 3|  |  |  |  |  |  |
|             |  |  |   | /|  |\ |  |  |  |  |  |
|             |  |  |   | 2|  |  |4 |  |  |  |  |    bir görünüme sahip olur.
    Searching yapar iken root olan ilk 7 e sorar. örenğin 6 değerini arıyoruz. 6, 7'den küçüktür. Sol edge gider 5 ile karşılastırılır.6, 5'den büyüktür. 5'in sağ edgeye gider 6 değerini buluruz.
